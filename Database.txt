
insert into topic(topic_id, topic_name) values (1, 'badminton');
insert into topic(topic_id, topic_name) values (2, 'algorithm');
insert into topic(topic_id, topic_name) values (3, 'technology');
insert into topic(topic_id, topic_name) values (4, 'framework');
insert into topic(topic_id, topic_name) values (5, 'psychiatry');
insert into topic(topic_id, topic_name) values (6, 'chess');


insert into user(user_id, email, password, username, photo) values (1, 'acprealms@gmail.com', '1234', 'Parth Modhvadia', 'https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg');
insert into user(user_id, email, password, username, photo) values (2, 'amcoc123@gmail.com', '1234', 'Nisarg Shah', 'https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg');
insert into user(user_id, email, password, username, photo) values (3, 'amundra6@gmail.com', '1234', 'Sakshi Bansal', 'https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg');
insert into user(user_id, email, password, username, photo) values (4, 'amcoc1234@gmail.com', '1234', 'Ashit Mundra', 'https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg');
insert into user(user_id, email, password, username, photo) values (5, 'acprealms@gmail.com', '1234', 'Sumanto Pal', 'https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg');
insert into user(user_id, email, password, username, photo) values (6, 'acprealms@gmail.com', 1234, 'Devansh', 'https://st3.depositphotos.com/15648834/17930/v/600/depositphotos_179308454-stock-illustration-unknown-person-silhouette-glasses-profile.jpg');
update user set photo="https://i.ibb.co/mc1D229/1.jpg" where user_id=1;
update user set photo="https://i.ibb.co/DKDWFTq/Screenshot-716.png" where user_id=2;
update user set photo="https://i.ibb.co/5vMpxqZ/Screenshot-715.png" where user_id=4;

insert into question(ques_id, user_id, topic_id, title, body, marked) values (1, 2, 6, 'When you are winning, is it ethical to not go for a checkmate right away?', 'If you are leading a game, is it ethical to capture your opponent pieces one by one or go straight for checkmate?', FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (2, 1, 2, 'Is this connected-component labeling algorithm new?', 'A long time ago, I made a game in which a sort of connected-component labeling is required to implement AI part. I used the two-pass algorithm unknowingly at that time. Recently, I got to know that I can make them faster using bit-scan based method instead. It uses 1-bit-per-pixel data as input, instead of typical bytes-per-pixel input. Then it finds every linear chunks in each scan-lines using BSF instruction.', FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (3, 3, 4, 'Django and Celery error when using RabbitMQ in Centos Bounty expires in 2 days.', 'Answers to this question are eligible for a +50 reputation bounty. Alvaro Bataller is looking for an answer from a reputable source. I am using Django and Celery with RabbitMQ as the message broker. While developing in Windows I installed RabbitMQ and configured Celery inside Django. When running Celery inside my development Windows machine everything works correctly and tasks are being executed as expected. Now I am trying to deploy the app inside a Centos7 machine. Does anyone know why this is happening? How can I get Celery to work correctly with RabbitMQ inside of Centos7?', FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (4, 3, 3, 'How to get URL parameter using jQuery or plain JavaScript?', 'I have seen lots of jQuery examples where parameter size and name are unknown. My URL is only going to ever have 1 string. I just want to detect if sent exists?', FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (5, 4, 3, 'How does push notification technology work on Android?', 'How has Google implemented their push notification feature? Does it work through polling done by a service running in the background or in a different way?', FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (6, 4, 1, 'What is a LET in Badminton?', NULL, FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (7, 1, 6, 'Do you think that in the future we will see a woman as a World Champion?', NULL, FALSE);
insert into question(ques_id, user_id, topic_id, title, body, marked) values (8, 4, 6, 'How much tactics per day should I do?', NULL, FALSE);


insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(1, 1, 'chess');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(2, 1, 'checkmate');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(3, 1, 'ethic');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(4, 2, 'connected component');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(5, 2, 'game');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(6, 2, 'two pass');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(7, 2, 'bit scan');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(8, 3, 'Django');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(9, 3, 'celery');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(10, 3, 'RabbitMQ');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(11, 3, 'centos');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(12, 3, 'error');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(13, 3, 'configuration');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(14, 4, 'url parameter');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(15, 4, 'jQuery');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(16, 4, 'javascript');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(17, 5, 'Android');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(18, 5, 'push notification');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(19, 5, 'Google');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(20, 5, 'polling');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(21, 6, 'let');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(22, 6, 'terminology');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(23, 6, 'badminton');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(24, 7, 'chess');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(25, 7, 'women');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(26, 7, 'future');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(27, 8, 'chess');
insert into ques_keywords(ques_keywords_id, ques_id, keyword) values(28, 8, 'tactics');


insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (1, 6, 1, 'There is no rule or law that says that you have to try and checkmate in as few moves as possible and so there is no ethical requirement either. In fact, if there are just a few pieces left on the board and you are very short of time it makes a lot of sense to take all the opponent pieces as quickly as possible and only then worry about how you are going to checkmate. Otherwise if you run out of time while your opponent still has some material left then you are going to lose on time. If your flag falls after you have taken all their pieces then you still get a draw.', TRUE);
insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (2, 4, 1, 'If a football game was lopsided at halftime, wouldn''t it be ethical to call the game? Since chess has a resigning option, I do not consider any move as unethical. I consider an opponent who does not resign in a hopeless position as someone who deserves to be tortured, and it allows me to practice technique. So promote to all knights and practice the unusual mate.', FALSE);
insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (3, 3, 3, 'Celery is an asynchronous task queue based on distributed message passing. Task queues are used as a strategy to distribute the workload between threads/machines. In this tutorial I will explain how to install and setup Celery + RabbitMQ to execute asynchronous in a Django application. To work with Celery, we also need to install RabbitMQ because Celery requires an external solution to send and receive messages. Those solutions are called message brokers. Currently, Celery supports RabbitMQ, Redis, and Amazon SQS as message broker solutions.', FALSE);
insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (4, 2, 4, 'In this post, you will see small piece of code but really effective and useful. That is how to get URL Parameters using jQuery. Now days every server language provide direct method to get the URL parameters but this is not straight forward with jQuery.', FALSE);
insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (5, 5, 5, 'From what I have heard during an Android developers conference in Israel: There is simply a TCP socket waiting in accept mode on a cloud Google server. The TCP connection had been initiated by the Google Play application. That is why Google Play must be installed on the device for making Google Cloud Messaging (GCM) (formerly Android Cloud to Device Messaging Service - C2DM) work. When this TCP client socket receives some message, the message contains information such as the package name of the application it should be addressed to, and of course - the data itself. This data is parsed and packed into an intent that is broadcast and eventually received by the application. The TCP socket stays open even when the device''s radio state turns into IDLE mode. Applications don''t have to be running to receive the intents.', TRUE);
insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (6, 1, 5, 'Android keeps one active connection to Google servers, but it doesn''t use much power or data, because no traffic is sent along it until something sends a Google Cloud Messaging (GCM) message to an app on your phone. There''s only one connection on the phone, used by all apps: installing a new app that uses GCM doesn''t add any extra load. The first step in GCM is that a third-party server (such as an email server) sends a request to Google''s GCM server. This server then sends the message to your device, through that open connection. The Android system looks at the message to determine which app it''s for, and starts that app. The app must have registered with Android to use GCM, and it must have the relevant permission. When the app starts, it might create a notification straight away with the data from the message. GCM messages are very limited in size, so the app might instead open a normal connection to the third-party server to get more information (for example, downloading the headers of new emails).', FALSE); 
insert into answer(ans_id, user_id, ques_id, answer_body, correct) values (7, 1, 6, 'Let is declared by a coach or a player if there is no coach. It is used to halt play', FALSE);



insert into user_topic(user_topic_id, user_id, topic_id) values(1, 6, 6);
insert into user_topic(user_topic_id, user_id, topic_id) values(2, 4, 6);
insert into user_topic(user_topic_id, user_id, topic_id) values(3, 3, 4);
insert into user_topic(user_topic_id, user_id, topic_id) values(4, 1, 3);
insert into user_topic(user_topic_id, user_id, topic_id) values(5, 1, 1);
insert into user_topic(user_topic_id, user_id, topic_id) values(6, 5, 3);
insert into user_topic(user_topic_id, user_id, topic_id) values(7, 2, 3);
insert into user_topic(user_topic_id, user_id, topic_id) values(8, 2, 1);
insert into user_topic(user_topic_id, user_id, topic_id) values(9, 3, 1);
insert into user_topic(user_topic_id, user_id, topic_id) values(10, 4, 1);
